library(tidyverse)
library(readxl)
library(reshape2)
library(ggplot2)

trigger_DE <- read.csv("C:/Users/irene/Desktop/IBA/trigger_DE.csv", header = TRUE, sep = ";")

# pulisco la tabella da eventuali NA
trigger_DE <- na.omit(trigger_DE)
trigger_DE <- trigger_DE %>% filter(Red.List.Category != "n/a")

# aggiungo una colonna "peso" che mi indica il valore numerico associato a ogni categoria IUCN
aggiungi_pesi_IUCN <- function(df) {
  iucn_weights <- data.frame(
    Red.List.Category = c("LC", "NT", "VU", "EN", "CR", "EW", "EX"),
    peso = c(0, 1, 2, 3, 4, 5, 6)
  )
  df_weights <- df %>%
    left_join(iucn_weights, by = "Red.List.Category")
  
  return(df_weights)
}

trigger_DE <- aggiungi_pesi_IUCN(trigger_DE)


################ Creare tabella pre_RLI_DE ##############

# prima creo un dataframe che mi estrae la lista di specie univoche + valore IUCN . 
species_IUCN <- trigger_DE %>%
  select(Species, Red.List.Category, peso) %>%
  distinct()

# poi creo un dataframe con colonna 1 = lista di specie 
# colonna 2-n = IBAs riempite con 1 o 0 se la sp Ã¨ stata usata o no per quell'iba
iba_matrix <- dcast(trigger_DE, Species ~ IBA, value.var = "IBA", fun.aggregate = length)

# Unisco le due tabelle per ottenere la tabella finale pre_RLI_DE
pre_RLI_DE <- species_IUCN %>%
  left_join(iba_matrix, by = "Species")

# ora controllo che tutti i valori nelle colonne delle iba siano 0 o 1
unique_values <- lapply(pre_RLI_DE[, 4:ncol(pre_RLI_DE)], unique)


############## calcolare RLI index ##############

# funzione per calcolare indice:
calculate_rli <- function(df) {
  # Estrarre i nomi delle colonne delle IBA
  iba_columns <- names(df)[4:ncol(df)]
  
  # Inizializzare un vettore per memorizzare gli indici
  iba_indices <- numeric(length(iba_columns))
  
  # Calcolare l'indice per ogni IBA
  for (i in seq_along(iba_columns)) {
    iba_col <- iba_columns[i]
    trigger_species <- df[df[[iba_col]] == 1, ]
    peso_sum <- sum(trigger_species$peso)
    num_triggers <- sum(df[[iba_col]])
    iba_indices[i] <- peso_sum + num_triggers
  }
  
  # Creare una nuova riga per il data frame
  new_row <- c("RLI", NA, NA, iba_indices)
  return(new_row)
}

RLI_row <- calculate_rli(pre_RLI_DE)

RLI_DE <- rbind(pre_RLI_DE, RLI_row)

write.csv(RLI_DE, file = "RLI_DE.csv", row.names = FALSE)
